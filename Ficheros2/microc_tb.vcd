$date
	Tue Nov 19 20:30:00 2024
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module microc_tb $end
$var wire 1 ! z $end
$var wire 6 " Opcode [5:0] $end
$var reg 3 # Op [2:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$var reg 1 & s_inc $end
$var reg 1 ' s_inm $end
$var reg 1 ( we3 $end
$var reg 1 ) wez $end
$scope module microc1 $end
$var wire 3 * Op [2:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 & s_inc $end
$var wire 1 ' s_inm $end
$var wire 1 ( we3 $end
$var wire 1 ) wez $end
$var wire 1 + zero $end
$var wire 1 ! z $end
$var wire 8 , salida_alu [7:0] $end
$var wire 8 - WD3 [7:0] $end
$var wire 4 . WA3 [3:0] $end
$var wire 8 / RD2 [7:0] $end
$var wire 8 0 RD1 [7:0] $end
$var wire 4 1 RA2 [3:0] $end
$var wire 4 2 RA1 [3:0] $end
$var wire 10 3 PC_nuevo [9:0] $end
$var wire 10 4 PC_incrementado [9:0] $end
$var wire 10 5 PC_actual [9:0] $end
$var wire 6 6 Opcode [5:0] $end
$var wire 16 7 Instruccion [15:0] $end
$var wire 8 8 Inmediato [7:0] $end
$var wire 10 9 Dir_salto [9:0] $end
$scope module alu_inst $end
$var wire 3 : Op [2:0] $end
$var wire 8 ; B [7:0] $end
$var wire 8 < A [7:0] $end
$var reg 8 = S [7:0] $end
$var reg 1 + zero $end
$upscope $end
$scope module banco_registros $end
$var wire 4 > RA1 [3:0] $end
$var wire 4 ? RA2 [3:0] $end
$var wire 4 @ WA3 [3:0] $end
$var wire 1 $ clk $end
$var wire 1 ( we3 $end
$var wire 8 A WD3 [7:0] $end
$var wire 8 B RD2 [7:0] $end
$var wire 8 C RD1 [7:0] $end
$upscope $end
$scope module memoria_programa $end
$var wire 16 D Data [15:0] $end
$var wire 1 $ clk $end
$var wire 10 E Address [9:0] $end
$upscope $end
$scope module mux_alu $end
$var wire 8 F D0 [7:0] $end
$var wire 8 G D1 [7:0] $end
$var wire 1 ' s $end
$var wire 8 H Y [7:0] $end
$var parameter 32 I WIDTH $end
$upscope $end
$scope module mux_pc $end
$var wire 10 J D0 [9:0] $end
$var wire 1 & s $end
$var wire 10 K Y [9:0] $end
$var wire 10 L D1 [9:0] $end
$var parameter 32 M WIDTH $end
$upscope $end
$scope module registro_pc $end
$var wire 10 N D [9:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var parameter 32 O WIDTH $end
$var reg 10 P Q [9:0] $end
$upscope $end
$scope module registro_zero $end
$var wire 1 ) carga $end
$var wire 1 $ clk $end
$var wire 1 + d $end
$var wire 1 % reset $end
$var reg 1 ! q $end
$upscope $end
$scope module sum_pc $end
$var wire 10 Q A [9:0] $end
$var wire 10 R B [9:0] $end
$var wire 10 S Y [9:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module regA $end
$var wire 1 T CargaA $end
$var wire 1 U ResetA $end
$var wire 1 V clk $end
$var wire 4 W entA [3:0] $end
$var wire 4 X q [3:0] $end
$scope module ffa0 $end
$var wire 1 T carga $end
$var wire 1 V clk $end
$var wire 1 Y d $end
$var wire 1 U reset $end
$var parameter 32 Z retardo $end
$var reg 1 [ q $end
$upscope $end
$scope module ffa1 $end
$var wire 1 T carga $end
$var wire 1 V clk $end
$var wire 1 \ d $end
$var wire 1 U reset $end
$var parameter 32 ] retardo $end
$var reg 1 ^ q $end
$upscope $end
$scope module ffa2 $end
$var wire 1 T carga $end
$var wire 1 V clk $end
$var wire 1 _ d $end
$var wire 1 U reset $end
$var parameter 32 ` retardo $end
$var reg 1 a q $end
$upscope $end
$scope module ffa3 $end
$var wire 1 T carga $end
$var wire 1 V clk $end
$var wire 1 b d $end
$var wire 1 U reset $end
$var parameter 32 c retardo $end
$var reg 1 d q $end
$upscope $end
$upscope $end
$scope module regQ $end
$var wire 1 e CargaQ $end
$var wire 1 f DesplazaQ $end
$var wire 1 g clk $end
$var wire 1 h enable $end
$var wire 3 i entQ [2:0] $end
$var wire 1 j reset $end
$var wire 3 k q [2:0] $end
$scope module ff0 $end
$var wire 1 h carga $end
$var wire 1 g clk $end
$var wire 1 l inp_c $end
$var wire 1 m inp_d $end
$var wire 1 j reset $end
$var wire 1 e selc_d $end
$var wire 1 n q $end
$var wire 1 o inp $end
$scope module ff0 $end
$var wire 1 h carga $end
$var wire 1 g clk $end
$var wire 1 j reset $end
$var wire 1 o d $end
$var parameter 32 p retardo $end
$var reg 1 n q $end
$upscope $end
$scope module mux0 $end
$var wire 1 m a $end
$var wire 1 l b $end
$var wire 1 o out $end
$var wire 1 e s $end
$var wire 1 q s_n $end
$var wire 1 r sa $end
$var wire 1 s sb $end
$upscope $end
$upscope $end
$scope module ff1 $end
$var wire 1 h carga $end
$var wire 1 g clk $end
$var wire 1 t inp_c $end
$var wire 1 u inp_d $end
$var wire 1 j reset $end
$var wire 1 e selc_d $end
$var wire 1 v q $end
$var wire 1 w inp $end
$scope module ff0 $end
$var wire 1 h carga $end
$var wire 1 g clk $end
$var wire 1 j reset $end
$var wire 1 w d $end
$var parameter 32 x retardo $end
$var reg 1 v q $end
$upscope $end
$scope module mux0 $end
$var wire 1 u a $end
$var wire 1 t b $end
$var wire 1 w out $end
$var wire 1 e s $end
$var wire 1 y s_n $end
$var wire 1 z sa $end
$var wire 1 { sb $end
$upscope $end
$upscope $end
$scope module ff2 $end
$var wire 1 h carga $end
$var wire 1 g clk $end
$var wire 1 | inp_c $end
$var wire 1 } inp_d $end
$var wire 1 j reset $end
$var wire 1 e selc_d $end
$var wire 1 ~ q $end
$var wire 1 !" inp $end
$scope module ff0 $end
$var wire 1 h carga $end
$var wire 1 g clk $end
$var wire 1 j reset $end
$var wire 1 !" d $end
$var parameter 32 "" retardo $end
$var reg 1 ~ q $end
$upscope $end
$scope module mux0 $end
$var wire 1 } a $end
$var wire 1 | b $end
$var wire 1 !" out $end
$var wire 1 e s $end
$var wire 1 #" s_n $end
$var wire 1 $" sa $end
$var wire 1 %" sb $end
$upscope $end
$upscope $end
$upscope $end
$scope module sum4 $end
$var wire 4 &" A [3:0] $end
$var wire 4 '" B [3:0] $end
$var wire 1 (" c_in $end
$var wire 1 )" p3 $end
$var wire 1 *" p2 $end
$var wire 1 +" p1 $end
$var wire 1 ," p0 $end
$var wire 1 -" g3 $end
$var wire 1 ." g2 $end
$var wire 1 /" g1 $end
$var wire 1 0" g0 $end
$var wire 1 1" c_out $end
$var wire 1 2" c4 $end
$var wire 1 3" c3 $end
$var wire 1 4" c2 $end
$var wire 1 5" c1 $end
$var wire 4 6" S [3:0] $end
$var wire 4 7" C [4:1] $end
$scope module cla $end
$var wire 4 8" G [3:0] $end
$var wire 4 9" P [3:0] $end
$var wire 1 (" c_in $end
$var wire 4 :" C [4:1] $end
$upscope $end
$scope module fa0 $end
$var wire 1 ;" a $end
$var wire 1 <" b $end
$var wire 1 (" c_in $end
$var wire 1 5" c_out $end
$var wire 1 0" g $end
$var wire 1 ," p $end
$var wire 1 =" sum_par $end
$var wire 1 >" sum $end
$var wire 1 ?" carry2 $end
$var wire 1 @" carry1 $end
$scope module ha1 $end
$var wire 1 ;" a $end
$var wire 1 <" b $end
$var wire 1 @" carry $end
$var wire 1 =" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 (" a $end
$var wire 1 =" b $end
$var wire 1 ?" carry $end
$var wire 1 >" sum $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var wire 1 A" a $end
$var wire 1 B" b $end
$var wire 1 C" c_in $end
$var wire 1 4" c_out $end
$var wire 1 /" g $end
$var wire 1 +" p $end
$var wire 1 D" sum_par $end
$var wire 1 E" sum $end
$var wire 1 F" carry2 $end
$var wire 1 G" carry1 $end
$scope module ha1 $end
$var wire 1 A" a $end
$var wire 1 B" b $end
$var wire 1 G" carry $end
$var wire 1 D" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 C" a $end
$var wire 1 D" b $end
$var wire 1 F" carry $end
$var wire 1 E" sum $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 H" a $end
$var wire 1 I" b $end
$var wire 1 J" c_in $end
$var wire 1 3" c_out $end
$var wire 1 ." g $end
$var wire 1 *" p $end
$var wire 1 K" sum_par $end
$var wire 1 L" sum $end
$var wire 1 M" carry2 $end
$var wire 1 N" carry1 $end
$scope module ha1 $end
$var wire 1 H" a $end
$var wire 1 I" b $end
$var wire 1 N" carry $end
$var wire 1 K" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 J" a $end
$var wire 1 K" b $end
$var wire 1 M" carry $end
$var wire 1 L" sum $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 O" a $end
$var wire 1 P" b $end
$var wire 1 Q" c_in $end
$var wire 1 2" c_out $end
$var wire 1 -" g $end
$var wire 1 )" p $end
$var wire 1 R" sum_par $end
$var wire 1 S" sum $end
$var wire 1 T" carry2 $end
$var wire 1 U" carry1 $end
$scope module ha1 $end
$var wire 1 O" a $end
$var wire 1 P" b $end
$var wire 1 U" carry $end
$var wire 1 R" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 Q" a $end
$var wire 1 R" b $end
$var wire 1 T" carry $end
$var wire 1 S" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module uc $end
$var wire 1 V" clk $end
$var wire 1 W" q0 $end
$var wire 1 X" start $end
$var wire 1 Y" ResetA $end
$var wire 1 Z" Fin $end
$var wire 1 [" DesplazaQ $end
$var wire 1 \" CargaQ $end
$var wire 1 ]" CargaA $end
$var parameter 3 ^" S0 $end
$var parameter 3 _" S1 $end
$var parameter 3 `" S2 $end
$var parameter 3 a" S3 $end
$var parameter 3 b" S4 $end
$var parameter 3 c" S5 $end
$var parameter 3 d" S6 $end
$var parameter 32 e" retardo $end
$var reg 3 f" nextstate [2:0] $end
$var reg 3 g" state [2:0] $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 e"
b110 d"
b101 c"
b100 b"
b11 a"
b10 `"
b1 _"
b0 ^"
b1 ""
b1 x
b1 p
b1 c
b1 `
b1 ]
b1 Z
b1010 O
b1010 M
b1000 I
$end
#0
$dumpvars
bx g"
bx f"
x]"
x\"
x["
xZ"
xY"
zX"
zW"
zV"
xU"
xT"
xS"
xR"
xQ"
zP"
zO"
xN"
xM"
xL"
xK"
xJ"
zI"
zH"
xG"
xF"
xE"
xD"
xC"
zB"
zA"
x@"
x?"
x>"
x="
z<"
z;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
z("
bz '"
bz &"
x%"
0$"
z#"
x!"
x~
0}
z|
x{
xz
zy
xw
xv
xu
zt
xs
xr
zq
xo
xn
xm
zl
bx k
zj
bz i
xh
zg
zf
ze
xd
zb
xa
z_
x^
z\
x[
zY
bx X
bz W
zV
zU
zT
b1 S
b1 R
b0 Q
b0 P
b101 N
b1 L
b101 K
b101 J
b0 H
b101 G
b0 F
b0 E
b100000000000101 D
b0 C
b0 B
b0 A
b101 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b101 9
b101 8
b100000000000101 7
b10000 6
b0 5
b1 4
b101 3
b0 2
b0 1
b0 0
b0 /
b101 .
b0 -
b0 ,
1+
b0 *
0)
0(
0'
0&
1%
0$
b0 #
b10000 "
0!
$end
#500
1$
#1000
0$
0%
#1500
b10 3
b10 K
b10 N
b10 8
b10 G
b10 .
b10 @
b10 9
b10 J
b100 "
b100 6
b110 4
b110 L
b110 S
b1000000000010 7
b1000000000010 D
b101 5
b101 E
b101 P
b101 Q
1$
#2000
b10 -
b10 A
b10 H
b110 3
b110 K
b110 N
0$
1(
1'
1&
#2500
b100001 -
b100001 A
b100001 H
b10 /
b10 ;
b10 B
b111 3
b111 K
b111 N
b100001 8
b100001 G
b1 .
b1 @
b10 1
b10 ?
b100001 9
b100001 J
b111 4
b111 L
b111 S
b1000000100001 7
b1000000100001 D
b110 5
b110 E
b110 P
b110 Q
1$
#3000
0$
#3500
b1000011 -
b1000011 A
b1000011 H
b0 /
b0 ;
b0 B
b1000 3
b1000 K
b1000 N
b1000011 8
b1000011 G
b11 .
b11 @
b100 1
b100 ?
b1000011 9
b1000011 J
b1000 4
b1000 L
b1000 S
b1000001000011 7
b1000001000011 D
b111 5
b111 E
b111 P
b111 Q
1$
#4000
0$
#4500
b10100 -
b10100 A
b10100 H
b100001 /
b100001 ;
b100001 B
b1001 3
b1001 K
b1001 N
b10100 8
b10100 G
b100 .
b100 @
b1 1
b1 ?
b10100 9
b10100 J
b1001 4
b1001 L
b1001 S
b1000000010100 7
b1000000010100 D
b1000 5
b1000 E
b1000 P
b1000 Q
1$
#5000
0$
#5500
0+
b10 ,
b10 =
b10 F
b110010 -
b110010 A
b110010 H
b1000011 /
b1000011 ;
b1000011 B
b10 0
b10 <
b10 C
b1010 3
b1010 K
b1010 N
b110010 8
b110010 G
b10 .
b10 @
b11 1
b11 ?
b10 2
b10 >
b1000110010 9
b1000110010 J
b101000 "
b101000 6
b1010 4
b1010 L
b1010 S
b1010001000110010 7
b1010001000110010 D
b1001 5
b1001 E
b1001 P
b1001 Q
1$
#6000
b1000101 ,
b1000101 =
b1000101 F
b1000101 -
b1000101 A
b1000101 H
0$
b10 #
b10 *
b10 :
0'
#6500
b110101 -
b110101 A
b110101 H
b110101 ,
b110101 =
b110101 F
b10100 /
b10100 ;
b10100 B
b100001 0
b100001 <
b100001 C
b1011 3
b1011 K
b1011 N
b1000001 8
b1000001 G
b1 .
b1 @
b100 1
b100 ?
b1 2
b1 >
b101000001 9
b101000001 J
b101100 "
b101100 6
b1011 4
b1011 L
b1011 S
b1011000101000001 7
b1011000101000001 D
b1010 5
b1010 E
b1010 P
b1010 Q
1$
#7000
b1101 -
b1101 A
b1101 H
b1101 ,
b1101 =
b1101 F
0$
b11 #
b11 *
b11 :
#7500
b0 -
b0 A
b0 H
1+
b0 ,
b0 =
b0 F
b0 /
b0 ;
b0 B
b0 0
b0 <
b0 C
b1100 3
b1100 K
b1100 N
b1001 8
b1001 G
b1001 .
b1001 @
b0 1
b0 ?
b1000 2
b1000 >
b1001 9
b1001 J
b10010 "
b10010 6
b1100 4
b1100 L
b1100 S
b100100000001001 7
b100100000001001 D
b1011 5
b1011 E
b1011 P
b1011 Q
1$
#8000
b1001 3
b1001 K
b1001 N
0$
b0 #
b0 *
b0 :
1)
0(
0&
#8500
b1000101 -
b1000101 A
b1000101 H
0+
b1000101 ,
b1000101 =
b1000101 F
b1000011 /
b1000011 ;
b1000011 B
b1000101 0
b1000101 <
b1000101 C
b1000110010 3
b1000110010 K
b1000110010 N
b110010 8
b110010 G
b10 .
b10 @
b11 1
b11 ?
b10 2
b10 >
b1000110010 9
b1000110010 J
b101000 "
b101000 6
1!
b1010 4
b1010 L
b1010 S
b1010001000110010 7
b1010001000110010 D
b1001 5
b1001 E
b1001 P
b1001 Q
1$
#9000
b10001000 -
b10001000 A
b10001000 H
b10001000 ,
b10001000 =
b10001000 F
b1010 3
b1010 K
b1010 N
0$
b10 #
b10 *
b10 :
0)
1(
1&
#9500
b100001 -
b100001 A
b100001 H
b100001 ,
b100001 =
b100001 F
b10100 /
b10100 ;
b10100 B
b1101 0
b1101 <
b1101 C
b1011 3
b1011 K
b1011 N
b1000001 8
b1000001 G
b1 .
b1 @
b100 1
b100 ?
b1 2
b1 >
b101000001 9
b101000001 J
b101100 "
b101100 6
b1011 4
b1011 L
b1011 S
b1011000101000001 7
b1011000101000001 D
b1010 5
b1010 E
b1010 P
b1010 Q
1$
#10000
b11111001 -
b11111001 A
b11111001 H
b11111001 ,
b11111001 =
b11111001 F
0$
b11 #
b11 *
b11 :
#10500
b0 -
b0 A
b0 H
1+
b0 ,
b0 =
b0 F
b0 /
b0 ;
b0 B
b0 0
b0 <
b0 C
b1100 3
b1100 K
b1100 N
b1001 8
b1001 G
b1001 .
b1001 @
b0 1
b0 ?
b1000 2
b1000 >
b1001 9
b1001 J
b10010 "
b10010 6
b1100 4
b1100 L
b1100 S
b100100000001001 7
b100100000001001 D
b1011 5
b1011 E
b1011 P
b1011 Q
1$
#11000
0$
b0 #
b0 *
b0 :
1)
0(
#11500
b1101 3
b1101 K
b1101 N
b1100 8
b1100 G
b1100 .
b1100 @
b0 2
b0 >
b1100 9
b1100 J
b10000 "
b10000 6
b1101 4
b1101 L
b1101 S
b100000000001100 7
b100000000001100 D
b1100 5
b1100 E
b1100 P
b1100 Q
1$
#12000
b1100 3
b1100 K
b1100 N
0$
0)
0&
#12500
1$
#13000
0$
#13500
1$
#14000
0$
