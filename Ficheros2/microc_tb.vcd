$date
	Mon Nov 18 18:21:22 2024
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module microc_tb $end
$var wire 1 ! z $end
$var wire 6 " Opcode [5:0] $end
$var reg 3 # Op [2:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$var reg 1 & s_inc $end
$var reg 1 ' s_inm $end
$var reg 1 ( we3 $end
$var reg 1 ) wez $end
$scope module microc1 $end
$var wire 3 * Op [2:0] $end
$var wire 10 + PC_nuevo [9:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 & s_inc $end
$var wire 1 ' s_inm $end
$var wire 1 ( we3 $end
$var wire 1 ) wez $end
$var wire 1 ! z $end
$var wire 1 , zero $end
$var wire 8 - salida_alu [7:0] $end
$var wire 8 . WD3 [7:0] $end
$var wire 4 / WA3 [3:0] $end
$var wire 8 0 RD2 [7:0] $end
$var wire 8 1 RD1 [7:0] $end
$var wire 4 2 RA2 [3:0] $end
$var wire 4 3 RA1 [3:0] $end
$var wire 10 4 PC_actual [9:0] $end
$var wire 6 5 Opcode [5:0] $end
$var wire 16 6 Instruccion [15:0] $end
$var wire 8 7 Inmediato [7:0] $end
$var wire 10 8 Dir_salto [9:0] $end
$scope module alu $end
$var wire 3 9 Op [2:0] $end
$var wire 8 : B [7:0] $end
$var wire 8 ; A [7:0] $end
$var reg 8 < S [7:0] $end
$var reg 1 = zero $end
$upscope $end
$scope module bankanshat $end
$var wire 4 > RA1 [3:0] $end
$var wire 4 ? RA2 [3:0] $end
$var wire 4 @ WA3 [3:0] $end
$var wire 1 $ clk $end
$var wire 1 ( we3 $end
$var wire 8 A WD3 [7:0] $end
$var wire 8 B RD2 [7:0] $end
$var wire 8 C RD1 [7:0] $end
$upscope $end
$scope module ffd1 $end
$var wire 1 ) carga $end
$var wire 1 $ clk $end
$var wire 1 , d $end
$var wire 1 % reset $end
$var reg 1 D q $end
$upscope $end
$scope module memoria_programa $end
$var wire 16 E Data [15:0] $end
$var wire 1 $ clk $end
$var wire 10 F Address [9:0] $end
$upscope $end
$scope module mux_alu $end
$var wire 8 G D0 [7:0] $end
$var wire 8 H D1 [7:0] $end
$var wire 1 ' s $end
$var wire 8 I Y [7:0] $end
$var parameter 32 J WIDTH $end
$upscope $end
$scope module mux_pc $end
$var wire 10 K D0 [9:0] $end
$var wire 10 L Y [9:0] $end
$var wire 1 & s $end
$var wire 10 M D1 [9:0] $end
$var parameter 32 N WIDTH $end
$upscope $end
$scope module registro_pc $end
$var wire 10 O D [9:0] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var parameter 32 P WIDTH $end
$var reg 10 Q Q [9:0] $end
$upscope $end
$scope module suma1 $end
$var wire 10 R A [9:0] $end
$var wire 10 S B [9:0] $end
$var wire 10 T Y [9:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module regA $end
$var wire 1 U CargaA $end
$var wire 1 V ResetA $end
$var wire 1 W clk $end
$var wire 4 X entA [3:0] $end
$var wire 4 Y q [3:0] $end
$scope module ffa0 $end
$var wire 1 U carga $end
$var wire 1 W clk $end
$var wire 1 Z d $end
$var wire 1 V reset $end
$var parameter 32 [ retardo $end
$var reg 1 \ q $end
$upscope $end
$scope module ffa1 $end
$var wire 1 U carga $end
$var wire 1 W clk $end
$var wire 1 ] d $end
$var wire 1 V reset $end
$var parameter 32 ^ retardo $end
$var reg 1 _ q $end
$upscope $end
$scope module ffa2 $end
$var wire 1 U carga $end
$var wire 1 W clk $end
$var wire 1 ` d $end
$var wire 1 V reset $end
$var parameter 32 a retardo $end
$var reg 1 b q $end
$upscope $end
$scope module ffa3 $end
$var wire 1 U carga $end
$var wire 1 W clk $end
$var wire 1 c d $end
$var wire 1 V reset $end
$var parameter 32 d retardo $end
$var reg 1 e q $end
$upscope $end
$upscope $end
$scope module regQ $end
$var wire 1 f CargaQ $end
$var wire 1 g DesplazaQ $end
$var wire 1 h clk $end
$var wire 1 i enable $end
$var wire 3 j entQ [2:0] $end
$var wire 1 k reset $end
$var wire 3 l q [2:0] $end
$scope module ff0 $end
$var wire 1 i carga $end
$var wire 1 h clk $end
$var wire 1 m inp_c $end
$var wire 1 n inp_d $end
$var wire 1 k reset $end
$var wire 1 f selc_d $end
$var wire 1 o q $end
$var wire 1 p inp $end
$scope module ff0 $end
$var wire 1 i carga $end
$var wire 1 h clk $end
$var wire 1 k reset $end
$var wire 1 p d $end
$var parameter 32 q retardo $end
$var reg 1 o q $end
$upscope $end
$scope module mux0 $end
$var wire 1 n a $end
$var wire 1 m b $end
$var wire 1 p out $end
$var wire 1 f s $end
$var wire 1 r s_n $end
$var wire 1 s sa $end
$var wire 1 t sb $end
$upscope $end
$upscope $end
$scope module ff1 $end
$var wire 1 i carga $end
$var wire 1 h clk $end
$var wire 1 u inp_c $end
$var wire 1 v inp_d $end
$var wire 1 k reset $end
$var wire 1 f selc_d $end
$var wire 1 w q $end
$var wire 1 x inp $end
$scope module ff0 $end
$var wire 1 i carga $end
$var wire 1 h clk $end
$var wire 1 k reset $end
$var wire 1 x d $end
$var parameter 32 y retardo $end
$var reg 1 w q $end
$upscope $end
$scope module mux0 $end
$var wire 1 v a $end
$var wire 1 u b $end
$var wire 1 x out $end
$var wire 1 f s $end
$var wire 1 z s_n $end
$var wire 1 { sa $end
$var wire 1 | sb $end
$upscope $end
$upscope $end
$scope module ff2 $end
$var wire 1 i carga $end
$var wire 1 h clk $end
$var wire 1 } inp_c $end
$var wire 1 ~ inp_d $end
$var wire 1 k reset $end
$var wire 1 f selc_d $end
$var wire 1 !" q $end
$var wire 1 "" inp $end
$scope module ff0 $end
$var wire 1 i carga $end
$var wire 1 h clk $end
$var wire 1 k reset $end
$var wire 1 "" d $end
$var parameter 32 #" retardo $end
$var reg 1 !" q $end
$upscope $end
$scope module mux0 $end
$var wire 1 ~ a $end
$var wire 1 } b $end
$var wire 1 "" out $end
$var wire 1 f s $end
$var wire 1 $" s_n $end
$var wire 1 %" sa $end
$var wire 1 &" sb $end
$upscope $end
$upscope $end
$upscope $end
$scope module sum4 $end
$var wire 4 '" A [3:0] $end
$var wire 4 (" B [3:0] $end
$var wire 1 )" c_in $end
$var wire 1 *" p3 $end
$var wire 1 +" p2 $end
$var wire 1 ," p1 $end
$var wire 1 -" p0 $end
$var wire 1 ." g3 $end
$var wire 1 /" g2 $end
$var wire 1 0" g1 $end
$var wire 1 1" g0 $end
$var wire 1 2" c_out $end
$var wire 1 3" c4 $end
$var wire 1 4" c3 $end
$var wire 1 5" c2 $end
$var wire 1 6" c1 $end
$var wire 4 7" S [3:0] $end
$var wire 4 8" C [4:1] $end
$scope module cla $end
$var wire 4 9" G [3:0] $end
$var wire 4 :" P [3:0] $end
$var wire 1 )" c_in $end
$var wire 4 ;" C [4:1] $end
$upscope $end
$scope module fa0 $end
$var wire 1 <" a $end
$var wire 1 =" b $end
$var wire 1 )" c_in $end
$var wire 1 6" c_out $end
$var wire 1 1" g $end
$var wire 1 -" p $end
$var wire 1 >" sum_par $end
$var wire 1 ?" sum $end
$var wire 1 @" carry2 $end
$var wire 1 A" carry1 $end
$scope module ha1 $end
$var wire 1 <" a $end
$var wire 1 =" b $end
$var wire 1 A" carry $end
$var wire 1 >" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 )" a $end
$var wire 1 >" b $end
$var wire 1 @" carry $end
$var wire 1 ?" sum $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var wire 1 B" a $end
$var wire 1 C" b $end
$var wire 1 D" c_in $end
$var wire 1 5" c_out $end
$var wire 1 0" g $end
$var wire 1 ," p $end
$var wire 1 E" sum_par $end
$var wire 1 F" sum $end
$var wire 1 G" carry2 $end
$var wire 1 H" carry1 $end
$scope module ha1 $end
$var wire 1 B" a $end
$var wire 1 C" b $end
$var wire 1 H" carry $end
$var wire 1 E" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 G" carry $end
$var wire 1 F" sum $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 I" a $end
$var wire 1 J" b $end
$var wire 1 K" c_in $end
$var wire 1 4" c_out $end
$var wire 1 /" g $end
$var wire 1 +" p $end
$var wire 1 L" sum_par $end
$var wire 1 M" sum $end
$var wire 1 N" carry2 $end
$var wire 1 O" carry1 $end
$scope module ha1 $end
$var wire 1 I" a $end
$var wire 1 J" b $end
$var wire 1 O" carry $end
$var wire 1 L" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 K" a $end
$var wire 1 L" b $end
$var wire 1 N" carry $end
$var wire 1 M" sum $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 P" a $end
$var wire 1 Q" b $end
$var wire 1 R" c_in $end
$var wire 1 3" c_out $end
$var wire 1 ." g $end
$var wire 1 *" p $end
$var wire 1 S" sum_par $end
$var wire 1 T" sum $end
$var wire 1 U" carry2 $end
$var wire 1 V" carry1 $end
$scope module ha1 $end
$var wire 1 P" a $end
$var wire 1 Q" b $end
$var wire 1 V" carry $end
$var wire 1 S" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 R" a $end
$var wire 1 S" b $end
$var wire 1 U" carry $end
$var wire 1 T" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module uc $end
$var wire 1 W" clk $end
$var wire 1 X" q0 $end
$var wire 1 Y" start $end
$var wire 1 Z" ResetA $end
$var wire 1 [" Fin $end
$var wire 1 \" DesplazaQ $end
$var wire 1 ]" CargaQ $end
$var wire 1 ^" CargaA $end
$var parameter 3 _" S0 $end
$var parameter 3 `" S1 $end
$var parameter 3 a" S2 $end
$var parameter 3 b" S3 $end
$var parameter 3 c" S4 $end
$var parameter 3 d" S5 $end
$var parameter 3 e" S6 $end
$var parameter 32 f" retardo $end
$var reg 3 g" nextstate [2:0] $end
$var reg 3 h" state [2:0] $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 f"
b110 e"
b101 d"
b100 c"
b11 b"
b10 a"
b1 `"
b0 _"
b1 #"
b1 y
b1 q
b1 d
b1 a
b1 ^
b1 [
b1010 P
b1010 N
b1000 J
$end
#0
$dumpvars
bx h"
bx g"
x^"
x]"
x\"
x["
xZ"
zY"
zX"
zW"
xV"
xU"
xT"
xS"
xR"
zQ"
zP"
xO"
xN"
xM"
xL"
xK"
zJ"
zI"
xH"
xG"
xF"
xE"
xD"
zC"
zB"
xA"
x@"
x?"
x>"
z="
z<"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
z)"
bz ("
bz '"
x&"
0%"
z$"
x""
x!"
0~
z}
x|
x{
zz
xx
xw
xv
zu
xt
xs
zr
xp
xo
xn
zm
bx l
zk
bz j
xi
zh
zg
zf
xe
zc
xb
z`
x_
z]
x\
zZ
bx Y
bz X
zW
zV
zU
b0x01 T
b1 S
b0 R
b0 Q
b0x01 O
b0 M
b0x01 L
b101 K
b0 I
b0 H
b0 G
b0 F
b100000000000101 E
0D
b0 C
b0 B
b0 A
b101 @
b0 ?
b0 >
1=
b0 <
b0 ;
b0 :
b0 9
b101 8
b0 7
b100000000000101 6
b10000 5
b0 4
b0 3
b0 2
b0 1
b0 0
b101 /
b0 .
b0 -
x,
b0x01 +
b0 *
0)
0(
0'
0&
1%
0$
b0 #
b10000 "
z!
$end
#500
1$
#1000
0$
0%
#1500
x=
bx -
bx <
bx H
bx .
bx A
bx I
bx 0
bx :
bx B
bx 1
bx ;
bx C
bx 7
bx G
bx /
bx @
bx 2
bx ?
bx 3
bx >
bx 8
bx K
bx "
bx 5
bx +
bx L
bx O
bx T
bx 6
bx E
b0x01 4
b0x01 F
b0x01 M
b0x01 Q
b0x01 R
1$
#2000
0$
#2500
bx 4
bx F
bx M
bx Q
bx R
1$
#3000
0$
#3500
1$
#4000
0$
#4500
1$
#5000
0$
#5500
1$
#6000
0$
